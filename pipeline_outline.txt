# 1. Get a dataset with an admixed population and N reference populations to represent the contributing ancestries. Brenna can help us find this
## 1.2. QC the data as normal

plink --geno 0.05 --mind 0.1

# 2. Phase the data using SHAPEIT2. This is a departure from the Browning script for ease of converting to RFMIX format later. I don't think the difference in phased output should matter

# 3. Run refinedIBD on the phased data. Most recent version available here: https://faculty.washington.edu/browning/refined-ibd.html

# 4. Fill the gaps in IBD segments
for i in `seq 22`; do
  cat results/chrom${i}_phased.ibd | java -jar merge-ibd-segments.23Apr18.249.jar results/chrom${i}_phased.vcf.gz data/constrecomb.map 0.6 1 > results/chrom${i}_filled.ibd
done
### TO DO ###
### THAT VERSION OF merge-ibd-segments DOESN'T SEEM TO EXIST, SO USE THE RIGHT ONE. I ALSO THINK WE WILL NEED TO USE OUR ACTUAL GENETIC MAPS FROM PHASING, BECAUSE THAT LOOKS LIKE A DUMMY MAP FOR THE SIMULATED DATA  ###


# 5. Create RFMIX input using Alicia Martin's scripts, available here: https://github.com/armartin/ancestry_pipeline

# 6. Run RFMIX
### SHARON AND ALICIA USE DIFFERENT RUN COMMANDS. FIGURE OUT WHAT THEY DO AND DECIDE WHICH ONES WE WANT TO USE ###

# 7. make list of admixed ids
rm results/admids
for j in `seq 300 799`; do echo msp_$j >> results/admids; done
### TO DO ###
### REFORMAT THAT COMMAND TO WORK WITH OUR DATASET ###


# 8. Rephase the RFMIX output to match the original phasing
for i in `seq 22`; do
  python rephasevit.py results/chrom${i}_phased.vcf.gz results/admids results/chrom${i}_rfmix.allelesRephased0.txt results/chrom${i}_rfmix.0.Viterbi.txt > results/chrom${i}_rfmix_Viterbi_refinedibdphase
  rm results/chrom${i}_rfmix.*
done
### TO DO ###
### MAY NEED TO CHANGE VITERBI FILE NUMBER DEPENDING ON CHOSEN RUN OPTIONS ###


# 9. Filter on population and put in the ancestry (this takes about 10 minutes per chromosome
nanc=3
for i in `seq 11`; do
  python filter_gapfilled_ibd_ancestry.py results/chrom${i}_phased.ibd results/chrom${i}_filled.ibd results/chrom${i}${x}_rfmix_Viterbi_refinedibdphase $nanc > results/chrom${i}_allanc.gapfilled_ibd
 for anc in 1 2 3; do
   cat results/chrom${i}_allanc.gapfilled_ibd | grep -i "[[:space:]]${anc}"'$' | cut -f1-8 -d' ' > results/chrom${i}_anc${anc}.gapfilled_ibd
  done
done

# 10. Combine data from the different chromosomes
for anc in 1 2 3; do
  cat results/chrom[1-9]_anc${anc}.gapfilled_ibd results/chrom[1-3][0-9]_anc${anc}.gapfilled_ibd > results/anc${anc}.gapfilled_ibd
done

# 11. calculate adjusted number of pairs of haplotypes
for anc in 1 2 3; do
  cat results/chrom[1-9]_rfmix_Viterbi_refinedibdphase results/chrom[1-3][0-9]_rfmix_Viterbi_refinedibdphase | java -jar filtercolumns.jar 1 results/admids | python adjust_npairs.py $anc > results/anc${anc}_npairs
done

# 12. run IBDNe using 2 cM IBD length threshold
cm=2
for anc in 1 2 3; do
  cat results/anc${anc}.gapfilled_ibd | java -jar ibdne.05May18.1c3.jar map=data/constrecomb.map nthreads=12 mincm=$cm npairs=`cat results/anc${anc}_npairs` filtersamples=false out=results/anc${anc}_${cm}cM.ibdne
done
### TO DO ###
### MAKE SURE WE ARE USING THE IBDNE VERSION WE WANT ###

# 13. plot the results in R
pdf("figure1reproduction.pdf",height=3,width=10)
par(mfrow=c(1,3),mar=c(4.5,4.5,3.5,1.5)+0.1)
truene = read.table("data/true.ne")
for(anc in 1:3){
  filename=paste("results/anc",anc,"_2cM.ibdne.ne",sep="")
  x=read.table(filename,header=T)
  col2="#00000080"
  plot(truene[,1],truene[,1+anc],type="l",log="y",xlim=c(0,100),ylim=c(1e3,1e6),xlab="g (generations before present)",ylab="Ne (effective population size)",xaxs="i",yaxt="n",las=1,lwd=2.5,lty=32,col="blue",main=paste("Simulated",c("African","European","Asian")[anc],"ancestry"))
  abline(h=c(1e2,1e3,1e4,1e5,1e6,1e7),v=seq(20,80,20),col="lightgray",lty="dotted")
  axis(2,at=c(1e3,1e4,1e5,1e6,1e7),labels=c(expression(10^3),expression(10^4),expression(10^5),expression(10^6),expression(10^7)),las=1)
  polygon(c(x[,1],x[nrow(x):1,1]),c(x[,3],x[nrow(x):1,4]),col=col2,density=-1,border=col2)
  lines(x[,1],x[,2],lwd=1)
}
dev.off()

### TO DO ###
### MODIFY THIS TO FIT WITH OUR DATA ###



### ADDITIONAL QUESTIONS ###
### SHOULD WE INCLUDE ANY OF THE QC STEPS FROM SHYAMIE'S IBDNE PIPELINE INTO THIS ONE? ###
