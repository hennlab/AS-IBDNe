"""
Title: AS-IBDne
Description: Custom pipeline to infer ancestry-specific historical effective population sizes using IBDne
Authors: Mira Mastoras, Austin Reynolds
"""

import os

# -------
# SET-UP
# -------

DATASET = config['dataset']
GENMAP = config['genmap'] # The genetic map file should contain the map for the entire genome (all chromosomes).
GMAP = config['gmap'] # path to genetic map files for each chromosome
SMPMAP = config['smpmap']
ADMIX = config['admix_samples']
REF=config['ref'] # path to reference haps/sample/legend files, including prefix.

CHR = [i for i in range(1,23)]

# ---------
#  Targets
# ---------

rule all:
  input:
    expand("results/RFmix/{dataset}.chr{chrnum}.msp.tsv", dataset = DATASET, chrnum = CHR),
    expand("results/RFmix/{dataset}.chr{chrnum}.fb.tsv", dataset = DATASET, chrnum = CHR)
# ---------
#  Phasing
# ---------

rule break_chrom:
  input:
    multiext("data/{dataset}", ".bed", ".bim", ".fam")
  output:
    multiext("results/phasing/{dataset}.chr{chrnum}", ".bed", ".bim", ".fam")
  params:
    "results/phasing/{dataset}.chr{chrnum}"
  shell:
    """
    plink --bfile data/{wildcards.dataset} --chr {wildcards.chrnum} --make-bed --out {params}
    """

rule trim_phase:
  input:
    multiext("results/phasing/{dataset}.chr{chrnum}", ".bed", ".bim", ".fam")
  output:
    multiext("results/phasing/{dataset}.chr{chrnum}.phased", ".haps", ".sample"),
    "shapeit_log/{dataset}_chr{chrnum}.phased.log"
  params:
    inputmap = GMAP+"chr{chrnum}.gmap.txt",
    in_pre="results/phasing/{dataset}.chr{chrnum}",
    out_pre="results/phasing/{dataset}.chr{chrnum}.phased",
    log_pre="shapeit_log/{dataset}_chr{chrnum}.phased"
  threads: 10
  shell:
    """
    bash scripts/shapeit_iterate.sh {params.in_pre} {params.inputmap} {params.log_pre} {params.out_pre} {REF}_chr{wildcards.chrnum}.hap.gz {REF}_chr{wildcards.chrnum}.legend.gz {REF}.sample {threads}
    """

rule make_vcf:
  input:
    multiext("results/phasing/{dataset}.chr{chrnum}.phased", ".haps", ".sample")
  output:
    vcf = "results/phasing/{dataset}.chr{chrnum}.phased.vcf"
  params:
    in_pre="results/phasing/{dataset}.chr{chrnum}.phased",
  shell:
    """
    shapeit -convert --input-haps {params.in_pre} --output-vcf {output.vcf}
    """

rule split_vcf:
  input:
    "results/phasing/{dataset}.chr{chrnum}.phased.vcf"
  output:
    ref = "results/phasing/{dataset}.chr{chrnum}.phased.ref.vcf",
    admix = "results/phasing/{dataset}.chr{chrnum}.phased.admix.vcf"
  shell:
    """
    bgzip {input}
    tabix -p vcf {input}.gz
    bcftools view -S {ADMIX} {input}.gz > {output.admix}
    bcftools view -S ^{ADMIX} {input}.gz > {output.ref}
    """

rule run_rfmix:
  input:
    ref = "results/phasing/{dataset}.chr{chrnum}.phased.ref.vcf",
    admix = "results/phasing/{dataset}.chr{chrnum}.phased.admix.vcf"
  output:
    "results/RFmix/{dataset}.chr{chrnum}.msp.tsv",
    "results/RFmix/{dataset}.chr{chrnum}.fb.tsv"
  params:
    "results/RFmix/{dataset}.chr{chrnum}"
  shell:
    """
    rfmix -f {input.admix} -r {input.ref} -m {SMPMAP} -g {GENMAP} -o {params} --chromosome={wildcards.chrnum}
    """
